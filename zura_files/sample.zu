const BigStruct := struct {
  a: int!,
  b: str,
  c: int!,
  # add any amount of fields here....
};

const ConstantBigStruct := fn (a: int!, b: str, c: int!) BigStruct {
  have constantValue: BigStruct = {
    a: a,
    b: b,
    c: c,
  };
  return constantValue;
};

const main := fn () int! {
  have test: [3]BigStruct = [0];
  loop (i = 0; i < 3) : (i++) { 
    test[i] = ConstantBigStruct(i, "test", i + 1);
  };
  loop (i = 0; i < 3) : (i++) { 
    @outputln(1, test[i].a);
    @outputln(1, test[i].b);
    @outputln(1, test[i].c);
  };
  return 0;
};

# const main := fn () int! {
#   have test: BigStruct = ConstantBigStruct(1, "test", 2);
#   @outputln(1, test.a);
#   @outputln(1, test.b);
#   @outputln(1, test.c);
#   return 0;
# };
@import "../std/asciiToString.zu";
@import "helper.zu";

const tokenize := fn (source: *char, realSize: int!) void {
  # have tk: [120]Token = [0];
  have line: int! = 1;
  have col: int! = 0;

  loop (i = 0; i <= realSize) : (i++) {
    # Check whitespace and skip it
    if (source[i] == @cast<char>(32)) { col++; } # Skip spaces
    if (source[i] == @cast<char>(10)) { line++; col = 0; } # Skip newlines

    if (is_eof(source, i)) break; # Stop at null terminator

    @outputln(1, ascii_to_string(source[i]), " line: ", line, " col: ", col);
    # make_token(ascii_to_string(source[i]), 0, line, col);
  }
};

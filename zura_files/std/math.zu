const add := fn(lhs: int!, rhs: int!) int! {
  return lhs + rhs;
};

const sub := fn(lhs: int!, rhs: int!) int! {
  return lhs - rhs;
};

const mul := fn(lhs: int!, rhs: int!) int! {
  return lhs * rhs;
};

const div := fn(lhs: int!, rhs: int!) int! {
  return lhs / rhs;
};

const pow := fn(base: int!, exponent: int!) int! {
  have res: int! = base;
  loop (i = 1; i < exponent) : (i++) {
    res = res * base;
  }
  return res;
};
